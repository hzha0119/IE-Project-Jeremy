import requests
from bs4 import BeautifulSoup
import pandas as pd
from selenium import webdriver
import time
import re

url = 'https://widget.nhsd.healthdirect.org.au/v1/widget/search?widgetId=07888fb2-90c7-4f66-beaf-f72b49ab932d&types=%5Bservices_types%5D%3Aimmunisation+service'

browser = webdriver.Chrome('D://chromedriver.exe')
browser.get(url)
time.sleep(5)


from selenium.webdriver.common.action_chains import ActionChains
num = int(browser.find_element_by_class_name("ResultsLabel__Container-sc-13glsot-0").text.split()[-1][:-1]) // 20 + 1

for i in range(num):
    try:
        target = browser.find_elements_by_tag_name('li')[-1]
        actions = ActionChains(browser)
        actions.move_to_element(target)
        actions.perform()
    except:
        pass
    time.sleep(5)
    print(i, end = ', ') ## Track the progress

html = BeautifulSoup(browser.page_source)
browser.close()



GP = [x.find('div', {'class': 'ResultItem__Name-sc-1g9cevh-8'}).text.strip() for x in html.find_all('ul')[1].find_all('li')]
address = [x.find('address').text.strip() for x in html.find_all('ul')[1].find_all('li')]
contact = [x.find('a').text.strip() for x in html.find_all('ul')[1].find_all('li')]
postcode = [x.split()[-1] for x in address]

for i, x in enumerate(postcode):
    if x[0] == '2':
        postcode[i] = 'NSW ' + x
    elif x[0] == '3':
        postcode[i] = 'VIC ' + x
    elif x[0] == '4':
        postcode[i] = 'QLD ' + x
    elif x[0] == '5':
        postcode[i] = 'SA ' + x
    elif x[0] == '6':
        postcode[i] = 'WA ' + x
    elif x[0] == '7':
        postcode[i] = 'TAS ' + x
    elif x[0] == '8':
        postcode[i] = 'NT ' + x

add = [address[i][:-4] + postcode[i] for i in range(len(address))]

import pandas as pd
col = ['General Practitioner (GP)', 'Address', 'Phone']
df = pd.DataFrame(list(zip(GP, add, contact)), columns = col)


from geopy.geocoders import Nominatim
locator = Nominatim(user_agent="myGeocoder")

location = []
for i, x in enumerate(address):
    print(i, end = ', ')
    try:
        loc = locator.geocode(', '.join(x.split(',')[-2:]))
        print((loc.latitude, loc.longitude))
        location.append(loc)
    except:
        location.append('NA')
        print(x)

loc = []
for i, x in enumerate(location):
    try:
        loc.append('{{"lat":{}, "lng":{}}}'.format(x.latitude, x.longitude))
    except:
        loc.append('NA')


df['Location'] = loc

df.to_csv('List of GPs.csv', header = True, index = False)


data = list(df2.to_dict('index').values())
geo = [ast.literal_eval(x['Location']) for i, x in enumerate(data)]
for i, x in enumerate(data):
    data[i]['Location'] = geo[i]

txt = ',\n'.join([json.dumps(x) for x in data])
tt = "[\n" + txt + "\n]"

f = open('locations.json', 'w')
f.write(tt)
f.close()